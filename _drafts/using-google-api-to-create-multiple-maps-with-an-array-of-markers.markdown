---
title: Using Google API to Create Multiple Maps with an Array of Markers
date: 2016-09-01 21:51:00 Z
---

Whilst working on a project for a letting company, I was asked to add a way to group properties by a defined location. The client wanted each location to be displayed on an overview page, utilising a map to show potential properties in the area.

As I was writing the site using WordPress, the system stored the data using a page (locations), sub page (single location), and custom post type (properties). I used this information to get the maps onto the front-end and automatically be updated whenever the client changed any of the data in the back-end.

The front-end of the code looked a little similar to the below image, repeated for each location that was stored. 

![fla-location-preview.png](/uploads/fla-location-preview.png)

### Including the Google Maps API

Before we can do anything else we need to include the Google Maps API. Within our `<head>` make sure you have the following code.

~~~html
<script src='//maps.googleapis.com/maps/api/js'></script>
~~~

### Setting up the PHP

Below I’ve included a copy of the output generated by the `WP_Query`, this is to give you an example of the PHP array that was being used and how to tweak the code to work with your own array.

~~~php
Array 
(
  [0] => Array 
  (
    [0] => Array 
    (
      [0] => 51.5010095
      [1] => -0.1932793999999376
    )
    [1] => Array 
    (
      [0] => 51.5089037
      [1] => -0.19502280000006067
    )
    [2] => Array 
    (
      [0] => 51.4931511
      [1] => -0.18245690000003378
    )
  )
  [1] => Array 
  (
    …
  )
  [2] => Array 
  (
    …
  )
)
~~~

I generated a simplified PHP Array that included only the latitudes and longitudes, broken down by a sub-array. Each inner array was a location, and each array within that was a property. The first sub-array was actually the latitude and longitude of the location (this was used to centre the map).

### Setting Up Our Map Containers

For each item in our original `WP_Query` we created a `div` which had a unique ID. This allows us to reference the `div` to display the map which associates with the index of the array item we are in.